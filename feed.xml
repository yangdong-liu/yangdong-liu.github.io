<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://yangdong-liu.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://yangdong-liu.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-03T10:51:55+00:00</updated><id>https://yangdong-liu.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">文献分享 Vol. 1｜比较社交媒体上网络和语言的极化 / Durrheim &amp;amp; Schuld, 2025 / Political Psychology</title><link href="https://yangdong-liu.github.io/blog/2025/post1/" rel="alternate" type="text/html" title="文献分享 Vol. 1｜比较社交媒体上网络和语言的极化 / Durrheim &amp;amp; Schuld, 2025 / Political Psychology"/><published>2025-08-03T00:00:00+00:00</published><updated>2025-08-03T00:00:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2025/post1</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2025/post1/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/post1/Post-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/post1/Post-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/post1/Post-1400.webp"/> <img src="/assets/img/post1/Post.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture><figcaption class="caption">论文信息</figcaption> </figure> <h3 id="概要">概要</h3> <blockquote> <p><strong>问题</strong></p> </blockquote> <p>当人们在社交媒体上分享信息和交流时，他们通过优先连接志同道合的人和他们已经支持的观点，创造了「回声室」。大量研究利用人们之间的互动关系——通过转发和关注建立——来识别和研究社交网络中的极化现象。其中一些研究随后使用语言分析来描述网络中子社区的观点和关注点。但是，很少有研究独立于互动网络结构来识别话语中的极化；也缺少对两种极化——基于互动网络的极化和基于话语（观点分布）的极化的关系的讨论。</p> <blockquote> <p><strong>方法</strong></p> </blockquote> <p>我们使用机器学习创建了「发言者景观」（speaker landscapes)，能够独立于用户通过转发建立的社交网络，识别用户语言中的极化。通过在推文前加上用户名来创建「用户嵌入」，然后训练一个word2vec算法，根据用户在推文中使用的语言来衡量用户之间的相似性。我们计算说话者在词嵌入的高维向量空间中彼此的接近（或远离）程度，并创建简化的二维地图（称之为发言者景观），以显示社交媒体用户在辩论中的位置，基于他们表达的意见内容。</p> <blockquote> <p><strong>发现</strong></p> <ol> <li>与普遍假设相反，我们发现互动网络中用户之间的距离并不能很好地预测他们语言的相似性。</li> <li>转发既用于支持也用于批评言论，而民主党与共和党之间的极化是在发言者景观中逐步显现出来的，且远比互动网络中更为强烈。</li> </ol> </blockquote> <h3 id="网络和语言的两极分化">网络和语言的两极分化</h3> <p>尽管语言在极化动态中居于核心地位，但社交媒体研究的「主要特征」一直是依赖于「底层图的结构特征…[而不是]基于观点，或观点形成模型」 (Matakos et al., 2017, p. 1483)。最近的研究 (Iandoli et al., 2021; Mahmoudi et al., 2024; Tölle&amp; Trier, 2023) 通过与已知观点来源和标签的链接等，识别了「保守派」或「自由派」，或「支持疫苗者」或「反疫苗者」等社区，或使用社区检测算法识别友邻和转发网络中紧密连接的群集。社交媒体上的极化仍主要通过用户在互动网络中行为的聚类和分离来测量和可视化，而非通过他们所说内容。</p> <p>最近的研究结合了网络分析和语言分析。一些研究先识别社交网络中的社区，然后进行语言分析，以展示这些社区如何聚焦不同的话题和关注点，如何以不同方式构建问题，以及在情感上的差异 (例如，Alamsyah et al., 2024; Demszky et al., 2019; Falkenberg et al., 2022; Karjus &amp; Cuskley, 2024; KhudaBukhsh et al., 2021; Kutlu et al., 2019; Ojea Quintanaet al., 2022; Sarmiento et al., 2022; Villa-Cox et al., 2021)，以及随时间的变化 (Kopacheva &amp; Yantseva, 2022)。 另外有研究表明，群体内的互动表达的情感比群体间的互动更为积极 (Feldman et al., 2023; Yarchi et al., 2021)，尤其是在极化的语境中 (Garzón‐Velandia et al., 2024)。</p> <p>另一种结合网络和语言分析的方法是首先识别语言社区（例如，通过主题分析），然后研究这些社区成员如何相互互动。这项研究表明，同一语言社区的个体在社交网络中彼此更接近，更有可能转发、提及或关注彼此 (Mønsted &amp; Lehmann, 2022)。语言相似性对互动选择的影响在不同社区中有所不同，例如，Jiang 等人 (2020) 研究的「右翼」COVID‐19 Twitter 社区「几乎完全由同样右翼的用户转发」。</p> <p>综上所述，这些工作表明网络和语言中极化的估计在很大程度上是一致的。不同意见社区的个体倾向于与同一社区内的其他人互动，反映了「认知回声室」的存在 (Mønsted &amp; Lehmann, 2022)。解释性和情感性极化的水平往往与互动网络中用户之间的距离相关 (Feldman et al., 2023; Mønsted&amp; Lehmann, 2022)，反映了内群体偏好的模式。然而，也有证据表明社交媒体用户会与自己社区之外的用户和信息互动 (Barberá et al., 2015; Kopacheva &amp; Yantseva, 2022, p. 23)，这表明互动网络中个体之间的距离可能与语言差异并不强相关。</p> <p>很少有研究考察网络极化和语言极化如何随时间共同变化。一个显著的例外是 Rumshisky 等人 (2017) 的研究，该研究考察了 RWC 网络极化度量如何与俄语在线媒体中关于乌克兰的两个对立阵营之间的语言极化共同变化。在 2013 年 10 月至 2014 年 12 月的 15 个月期间，网络极化的 RWC 得分与对立群体之间的情感差异相关 (r = .67)，这表明随着冲突加剧，网络变得更加分离，彼此之间的情感更加负面。</p> <p>所有这些工作的一个核心局限是缺乏独立于网络社区成员身份的方法来衡量社交媒体用户之间的意见分布。在社交媒体极化研究中，互动的网络结构得到了很好的定义，但 「基本真实观点（例如，通过对个人的调查）并不为人所知」（Falkenberg 等人，2022 年，第 9 页）。在本文中，我们使用词嵌入来计算 Twitter 用户谈论疫苗的方式之间的高维差异，从而提供一个基本真实的意见衡量标准。然后，我们确定：(1) 社交媒体用户之间的语言相似性是否与他们在转发网络中的亲密程度相关；(2) 转发网络中社区之间的距离和语言结构是否会因极化事件而发生相同的变化。</p> <h3 id="方法">方法</h3> <p><strong>数据</strong></p> <p>我们重新分析了 Ojea Quintana et al. (2022) 的数据，以比较他们的转发网络与我们的发言者景观。数据包括 130 万条原创的疫苗相关推文和 1800 万条转发。数据采集时间为 2019 年 12 月 27 日至 2020 年 5 月 26 日，形成了两个 75 天的时间段，即世界卫生组织于 2020 年 3 月 11 日宣布 COVID‐19 大流行前后。</p> <p><strong>转发网络</strong></p> <p>Ojea Quintana et al. (2022) 制作了一个加权有向网络，包含无评论转发，排除了自我转发。每个用户是网络中的一个节点，通过联系与其他节点相连指示用户在网络中转发其他用户的次数。</p> <p>Ojea Quintana 等人 (2022) 使用 Gephi 的 Louvain 模块度最大化实现来识别包含 ≈ 80% 节点和 ≈ 90% 转发的五个主要集群。基于对推文内容、标签和有影响力作者的定性分析，这些社区被标记为以下类别（括号内为主要代表节点）：民主党人 (JoeBiden, KamalaHarris)，共和党人(realDonaldTrump, mikepence)，反疫苗者 (stopvaccinating, StopVaxTyranny)，公共卫生参与者 (CDCgov, WHO)，和非正统参与者 (BernieSanders, Trevornoah)。</p> <p><strong>发言者景观</strong></p> <p>我们从 130 万条原始推文中构建了发言者景观，排除了推文少于 5 条的用户，大流行宣布前剩下 4179 名发言者，宣布后剩下 20153 名发言者。数据通过将所有字母转换为小写并去除标点符号进行了清理。然后我们使用了 Phrases 类，来自开源 gensim Python 库 (Rehurek &amp; Sojka, 2011) 来创建在整个文本语料库中至少出现 70 次的多词表达的二元组。该过程重复了两次，因此最终训练数据包含三元组和四元组（即二元组的二元组）。根据Schuld等人 (2023)描述的策略，每条推文前都加上了作者的名字（以与推文正文相同的方式清理）。 为了将该词标记为发言人标记，我们在其前面加上了表达式 agent。</p> <p><strong>训练嵌入</strong></p> <p>我们使用了 gensim word2vec 模型在数据上训练嵌入模型，遍历整个推文数据语料库，使用 skip‐ gram 算法 (Mikolov et al., 2013) 从一个移动的 10 词窗口中预测下一个词。我们丢弃了所有出现次数少于 5 次的词和说话者标记，并训练了 30 个周期。词向量经过了归一化。最终的嵌入是一个数据框，每个词和代理在新的一行中，连接到一个独特的 250 维实数向量。向量提供了「地址」，指示每个词和代理在词嵌入的整体向量空间中的位置 (参见 Durrheim et al., 2023)。</p> <p>嵌入提供了词相似度的度量,其中在相似语法和语义上下文中使用的词被嵌入得彼此靠 近,而不太可能被同义使用的词在向量空间中被嵌入得相距较远 (Mikolov et al., 2013)。用户向量反映了说话者语言的相似性。使用相似语言且机器学习算法难以区分的个体被嵌入得 彼此靠近;而不相似、易于区分的说话者则被嵌入得相距较远。</p> <p><strong>可视化</strong></p> <p>我们使用 Python 开源 umap 包中实现的 UMAP 算法,将这些高维词嵌入可视化为二维地图 (McInnes et al., 2018)。这些说话者标记的词向量的低维表示提供了纯粹基于语言的观点分布表示，展示了辩论的社会和意识形态结构，具有相似观点的说话者聚集在景观的特定区域。</p> <h3 id="结果">结果</h3> <table> <tbody> <tr> <td>比较发言者景观的距离和转发网络的距离后，发现用户并不倾向于转发使用与自己相似语言的其他用户，而是转发持有各种观点的用户。</td> </tr> </tbody> </table> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/post1/figure1-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/post1/figure1-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/post1/figure1-1400.webp"/> <img src="/assets/img/post1/figure1.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture><figcaption class="caption">图1：相关性分析</figcaption> </figure> <table> <tbody> <tr> <td>大流行宣布前后转发网络结构变化</td> </tr> </tbody> </table> <p>图 2 显示了 Ojea Quintana 等人 (2022) 报告的无评论转发（不包括自我转发）的社交网络。该网络显示了 Gephi 的 Louvain 算法识别出的五个代理社区，分别标记为 antivaxxers (黑色)，public health actors (黄色)，republicans (红色)，democrats (蓝色)，和 unorthodox (绿色)。所有社区（尤其是共和党人）在疫情宣布后疫苗辩论加剧时，规模和转发活动均有所增加。两个转发图都沿党派线高度极化，民主党和共和党处于对立两极，民主党与公共卫生代理相连，共和党与 antivaxxers 相连。</p> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/post1/image-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/post1/image-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/post1/image-1400.webp"/> <img src="/assets/img/post1/image.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture><figcaption class="caption">图2：转发网络结构</figcaption> </figure> <p>为了量化转发网络中极化的变化，我们计算了 Normalized Adaptative Random Walk Controversy (ARWC) 分数 (Salloum et al., 2022)，每次比较两个社区，移除未连接的节点，并在无向图上使用20k 步的随机游走。自适应游走者在达到另一个社区的影响者时终止(即,k = .1 个最高度节点)。</p> <p>如果 pAB 是从社区 A 出发的路径找到社区 B 中影响者的概率，则 ARWC 分数定义为：</p> <p>ARWC = pAApBB − pABpAB</p> <p>ARWC 的取值范围在 1 到 0 之间，值越接近 1 表示社区之间的连通性越低或更多的极化，0 表示无极化，随机游走者同样可能最终停留在任一社区。对于每对社区，我们采样了 1000 条随机路径或「游走」以估计上述概率，并重复整个计算 20 次以评估估计的方差。</p> <p>图 3 中的 ARWC 分数显示大多数社区之间的分离随时间增加。例外情况是 Unorthodox 和 Republican 社区之间以及 Antivax 和 Public Health 社区之间的转发增加。这种 Antivax 和 Public Health 社区对立意识形态极点之间的去极化令人惊讶，可能反映了这些社区如何将对立观点作为批评对象。共和党人和民主党人随着时间推移彼此以及与反疫苗者的联系变得断开，但他们与公共卫生的联系随时间保持相对稳定。</p> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/post1/figure3-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/post1/figure3-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/post1/figure3-1400.webp"/> <img src="/assets/img/post1/figure3.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture><figcaption class="caption">图3：ARWC分数变化</figcaption> </figure> <table> <tbody> <tr> <td>大流行宣布前后语言变化</td> </tr> </tbody> </table> <p>Figure 4 报告了由声明前后疫 苗推文构建的发言者景观。为了便于解释发言者景观的区域，我们用包含” vaccin” 表达的 40 个最常见词进行了标注（其中大多数是标签，# 符号在数据预处理过程中被移除)。</p> <p>转发网络和发言者景观讲述了关于极化的不同故事。转发网络保持了极化结构，而发言者景观则没有。声明前，转发网络显示共和党人与民主党人之间高度极化，而发言者景观显示他们的接近，拥有共享的政治语言，且与公共卫生和反疫苗社区分开。与疫苗相关的词主要集中在卫生社区内，而非政治社区，揭示了各群体的意识形态定位—— vaccinefreedom 和 vaccineskill 位于反疫苗社区，vaccinesforall 和 vaccinessavelives 位于公共卫生社区。转发网络显示出民主党和共和党之间稳定的两极分化或断裂，而发言者分布则展示了随着时间推移，这些群体之间逐渐出现的极化现象。</p> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/post1/figure4-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/post1/figure4-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/post1/figure4-1400.webp"/> <img src="/assets/img/post1/figure4.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture><figcaption class="caption">图4：发言者景观变化</figcaption> </figure> <p>我们通过计算该语言环境中两个社区中随机选取的说话者对之间的余弦相似度分数，来衡量两个社区之间的距离。余弦相似度衡量嵌入中两个向量的接近程度，范围从 1（完全相似）到 0 （无关含义）到 −1 （最大不相似）(see Durrheim el al., 2023)。我们从每个社区随机选取 10,000 对说话者，与疫情前后语言环境中每个其他社区配对。然后我们计算两个社区之间的平均余弦相似度分数，以估计它们彼此的平均距离。</p> <p>社区对之间平均相似度分数的变化报告在图 5 中，显示（1）共和党人与反疫苗者变得相似，（2）民主党人与公共卫生者变得更相似，但与非正统派变得不那么相似，（3）共和党 人与民主党人之间的相似度降低，以及（4）反疫苗和公共卫生社区变得更相似，推测是因为他们趋同于讨论疫情。</p> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/post1/figure5-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/post1/figure5-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/post1/figure5-1400.webp"/> <img src="/assets/img/post1/figure5.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture><figcaption class="caption">图5：社区相似度变化</figcaption> </figure> <h3 id="讨论">讨论</h3> <p>我们这个时代的政治极化被归咎于由互联网和社交媒体提供的高选择性信息环境 (Pariser, 2011; Sunstein, 2009)。网络研究表明，社交媒体中的互动发生在回声室中，个体与志同道合的同伴紧密相连，但与其他人断开联系 (Iandoli et al., 2021)。然而,网络分离与极化之间的联系受到质疑，一些作者认为社交媒体可能促进对立观点的去极化暴露 (Barberá, 2014;Beam et al., 2018;Boxell et al., 2017)。</p> <p>本文比较了极化事件对互动网络和意见分布的影响。我们使用机器学习方法调查了关于疫苗接种的 Twitter 辩论中意见表达语言的极化，比较了 COVID‐19 大流行宣布前后「发言者景观」(Schuld et al., 2023) 的结构与转发网络。我们的结果挑战了该领域的一些常识。首先，我们发现社交网络中个体之间的距离并不能预测他们语言的相似性。此外，我们发现社交网络和发言者景观中社区之间的接近度变化并不相互映照。</p> <p>这些结果表明，相较于网络隔离，语言可能是一种更为敏感的极化测量指标，并提醒我们不要轻易将网络隔离视为极化本身，这种等同在网络模块化研究（Matakos et al., 2017）以及关于「回声室」的讨论中常被假定。我们的研究发现，在社交媒体上接触并了解多元观点，反而可能加剧党派意见的极化过程，使用户更明确地选择与谁认同、与谁对立。这一过程体现了群体从众（Sunstein, 2009）和「积极差异化」动机（McGarty et al., 1992）。通过转发接触与自身观点相反的意见，可能在这种两极分化的形成中起着尤为关键的作用（cf Flache et al., 2017；cf Bail et al., 2018）；这或许也解释了为何煽动性内容更容易在社交媒体上被广泛传播（Brady et al., 2019, 2020）。</p> <p>文献来源：Durrheim, K., &amp; Schuld, M. (2025). Polarization on social media: Comparing the dynamics of interaction networks and language‐based opinion distributions. <em>Political Psychology</em>.</p> <p>原文链接：https://onlinelibrary.wiley.com/doi/full/10.1111/pops.70000</p> <p>公众号推文链接：https://mp.weixin.qq.com/s/fxlvtpM8PYvBJmc_EPITmw</p>]]></content><author><name></name></author><category term="note"/><category term="political-psychology"/><category term="polarization"/><category term="social-media"/><category term="computational-methods"/><summary type="html"><![CDATA[论文信息]]></summary></entry><entry><title type="html">test</title><link href="https://yangdong-liu.github.io/blog/2024/test-post/" rel="alternate" type="text/html" title="test"/><published>2024-01-05T16:40:16+00:00</published><updated>2024-01-05T16:40:16+00:00</updated><id>https://yangdong-liu.github.io/blog/2024/test-post</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2024/test-post/"><![CDATA[<p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h4 id="hipster-list">Hipster list</h4> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> <p>Hoodie Thundercats retro, tote bag 8-bit Godard craft beer gastropub. Truffaut Tumblr taxidermy, raw denim Kickstarter sartorial dreamcatcher. Quinoa chambray slow-carb salvia readymade, bicycle rights 90’s yr typewriter selfies letterpress cardigan vegan.</p> <hr/> <p>Pug heirloom High Life vinyl swag, single-origin coffee four dollar toast taxidermy reprehenderit fap distillery master cleanse locavore. Est anim sapiente leggings Brooklyn ea. Thundercats locavore excepteur veniam eiusmod. Raw denim Truffaut Schlitz, migas sapiente Portland VHS twee Bushwick Marfa typewriter retro id keytar.</p> <blockquote> We do not grow absolutely, chronologically. We grow sometimes in one dimension, and not in another, unevenly. We grow partially. We are relative. We are mature in one realm, childish in another. —Anais Nin </blockquote> <p>Fap aliqua qui, scenester pug Echo Park polaroid irony shabby chic ex cardigan church-key Odd Future accusamus. Blog stumptown sartorial squid, gastropub duis aesthetic Truffaut vero. Pinterest tilde twee, odio mumblecore jean shorts lumbersexual.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[march & april, looking forward to summer]]></summary></entry><entry><title type="html">Welcome</title><link href="https://yangdong-liu.github.io/blog/2024/welcome/" rel="alternate" type="text/html" title="Welcome"/><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2024/welcome</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2024/welcome/"><![CDATA[<p>Welcome to my website! This is a placeholder post.</p> ]]></content><author><name></name></author><category term="blog"/><category term="welcome"/><summary type="html"><![CDATA[Welcome to my website! This is a placeholder post.]]></summary></entry><entry><title type="html">a post with giscus comments</title><link href="https://yangdong-liu.github.io/blog/2022/giscus-comments/" rel="alternate" type="text/html" title="a post with giscus comments"/><published>2022-12-10T15:59:00+00:00</published><updated>2022-12-10T15:59:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2022/giscus-comments</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2022/giscus-comments/"><![CDATA[<p>This post shows how to add GISCUS comments.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="comments"/><summary type="html"><![CDATA[an example of a blog post with giscus comments]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://yangdong-liu.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://yangdong-liu.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">a post with redirect</title><link href="https://yangdong-liu.github.io/blog/2022/redirect/" rel="alternate" type="text/html" title="a post with redirect"/><published>2022-02-01T17:39:00+00:00</published><updated>2022-02-01T17:39:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2022/redirect</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2022/redirect/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[you can also redirect to assets like pdf]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://yangdong-liu.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams"/><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin. Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p> <p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine. Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW. For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p> <h2 id="mermaid">Mermaid</h2> <p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div> <p>The diagram below was generated by the following code:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div> <div class="jekyll-diagrams diagrams mermaid"> Command Not Found: mmdc </div>]]></content><author><name></name></author><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://yangdong-liu.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2021/distill</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
  <span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
  <span class="n">df</span><span class="p">,</span>
  <span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
  <span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
  <span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
  <span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="details-boxes">Details boxes</h2> <p>Details boxes are collapsible boxes which hide additional information from the user. They can be added with the <code class="language-plaintext highlighter-rouge">details</code> liquid tag:</p> <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you’ll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ⋅⋅* Unordered sub-list.</li> <li>Actual numbers don’t matter, just that it’s a number ⋅⋅1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p> <p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li>Unordered list can use asterisks</li> <li>Or minuses</li> <li>Or pluses</li> </ul> <p><a href="https://www.google.com">I’m an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I’m a reference-style link</a></p> <p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here’s our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here’s a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but… This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://yangdong-liu.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata"/><published>2020-09-28T21:01:00+00:00</published><updated>2020-09-28T21:01:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p> <h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2> <ul> <li>Propagates the site.github namespace with repository metadata</li> <li>Setting site variables : <ul> <li>site.title</li> <li>site.description</li> <li>site.url</li> <li>site.baseurl</li> </ul> </li> <li>Accessing the metadata - duh.</li> <li>Generating edittable links.</li> </ul> <h2 id="additional-reading">Additional Reading</h2> <ul> <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li> <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li> <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata. <br/></li> </ul> <h2 id="example-metadata">Example MetaData</h2> <ul> <li>Host Name :</li> <li>URL :</li> <li>BaseURL :</li> <li>Archived :</li> <li>Contributors :</li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="metadata"/><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://yangdong-liu.github.io/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter"/><published>2020-09-28T15:12:00+00:00</published><updated>2020-09-28T15:12:00+00:00</updated><id>https://yangdong-liu.github.io/blog/2020/twitter</id><content type="html" xml:base="https://yangdong-liu.github.io/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p> <h1 id="tweet">Tweet</h1> <p>An example of displaying a tweet:</p> <div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> <h1 id="timeline">Timeline</h1> <p>An example of pulling from a timeline:</p> <div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> <h1 id="additional-details">Additional Details</h1> <p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="formatting"/><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry></feed>